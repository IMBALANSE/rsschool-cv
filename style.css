* { /*в начале задаем для абсолюно всех тегов правило и только потом начинаем расписывать стили*/
  box-sizing: border-box; /*Границы блока не меняются при добавлении отступов, в противном сл. размер блока растет при падинге  */
  margin: 0; /*эти два брата убирают все дефолтные отступы*/
  padding: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  display: flex; /*1 Связка для прижатия футера к низу, общая до 5*/
  flex-direction: column; /*2*/
  font-family: 'Anybody';
  font-size: 18px;
  font-weight: 400; /*размер шрифта*/
  line-height: 1.25; /*межстрочный интервал, По умолчанию в браузерах используется специальное значение line-height:normal . Оно означает, что браузер может принимать решение о размере строки самостоятельно. Как правило, оно будет в диапазоне 1.1 - 1.25 */
  min-height: 100vh; /*3 минимальная высота, расшифровывается 100% от окна браузера. Без параметра высоты не работает связка (body 1,2) */
}

main {
  flex: 1 1 auto; /*4 main body т.е. 1 позволили увеличиваться, вторая 1 позволили уменьшаться, auto -  автомоатический базовый размер*/
}
/*такая связка main body 1-4 позволяет растянуться футеру а средний блок прижать к верху*/

/* body {
  display: flex; /*1 Связка для прижатия футера к низу, общая до 5*
  flex-direction: column; /*2*
  justify-content: space-between; /*3*
  font-family: 'Anybody';
  font-size: 18px;
  font-weight: 400; /*размер шрифта*
  line-height: 1.25; /*межстрочный интервал*
  min-height: 100vh; /*4 минимальная высота, без параметра высоты не работает связка (body 1,2,3) 
}
*в таком раскладе между heder main и footer остаются разрывы*/

.header {
  background-color: rgb(207, 160, 241); /*чтобы цвет занимал всю ширину а не ширину обертки container*/
}
.container {
  max-width: 1200px; /*максимальная ширина обертки, *без нее не сработает margin: 0px auto */
  margin: 0 auto; /*центрует контейнер по горизонтали, важно запятая не ставится */
  min-height: 70px; /*минимальная высота блока обертки*/

}

.container-header {
  display:flex; /*в данном случает применил для запуска возможности прижать к правому краю и разместить по центру*/
  justify-content: flex-end; /*функция прижать к правому краю, по умолчанию justify-content: flex-start - поэтому с левой стороны*/
  align-items: center; /*разместить по центру (по вертикали по умолчанию align-items: stretch)*/
}
.nav {

}
.nav_ul {
  display:flex; /*в данном случае чтобы список сложэился в ряд*/
  list-style: none; /*убирает черные точки в списках */
}
.nav__item {
  padding: 0px 12px 0px 12px; /*запятые не ставятся*/
}
.nav__link {
  text-decoration: none; /*убирает подчеркивания в ссылках*/
}
.container-main {
  height: 100%;
  background-color: rgb(255, 255, 255);
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}
.section {
  width: calc(50% - 50px); /*такая конструкция делит на попалам и вычитает по 50 пикселей от каждого блока*/
  padding: 30px;
  color: #0e6e07;
  border-bottom: 1px solid #672f2f;
}
.section-profile {
  display: flex;
  justify-content: space-around; /*расстояние между блоками с разных сторон*/
  width: 100%; /*чтобы эта секция была на всю ширину родительского блока*/
  padding: 25px;
  border-bottom: 9px solid rgb(219, 182, 230);
  background-color: #ffffff;
  color: #0e6e07;
}
.image {
  width: 200px;
  border-radius: 50%;
  box-shadow: 0 1px 4px rgb(0 0 0 / 60%);
  filter: grayscale(0.2) brightness(1.05);
}
.section-profile__name {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.section-name__title {
}
.section-name__subtitle {
}
.section-title {
  color: #7408a2;
}
.section-list {
}
.section-list__item {

}
.Projects__link {
  text-decoration: none;
}

.Projects__link:visited {
  color: #0e6e07;
}

.pre {
}

.footer {
  background-color: rgb(203, 162, 221);
}

.container-footer {
  display:flex;
  align-self: auto;/*в начале не понял почему, но центрирует по вертикали дочерний блок, потому что по умолчанию стоит auto - Берёт родительское значение align-items или stretch, если нет родителя https://webref.ru/css/align-self*/
}

.footer__logo {
  width: 100%; /*это свойство позволяет растянуться на всю ширину родителя*/
  display:flex;
  align-items: center;
  justify-content: space-between;
}
/*связка container-footer и footer__logo центрирует содержимое в футоре по вертикльной оси*/

.footer__nav-link {
}
.rsschool {
}

.section:last-child { /*применить ко всем элементам с классом .section кроме последнего */
  border-bottom: none;
}